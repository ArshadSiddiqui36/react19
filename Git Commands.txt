====================| Git Basic Command |====================
> git init
> git status
> git add . | git add <file>
> git commit -m "first commit"
> git commit -a -m "Fixed"
> git commit -am "Fixed"
> git push -u origin master
> git pull -u origin master
> git clone <url>

> git commit -a -m "Your commit message here"
> git push

====================| Git Config Commands (Author identity) |====================
> git config --global user.email "you@example.com"
> git config --global user.name "Your Name"
* Omit --global to set the identity only in this repository.

====================| Git Branch Command |====================
=>List all branches:
1.To see a list of all branches (both local and remote), use:
> git branch
* This will show you all the local branches in your repository,
  with the current branch highlighted in green (or with an asterisk * next to it).

====================| List remote branches |====================
1.To see branches on the remote repository, use:
> git branch -r

====================| List both local and remote branches |====================
1.To list both local and remote branches, use:
> git branch -a

====================| Create a new branch |====================
1.To create a new branch (but not switch to it), use:
> git branch new-branch-name

====================| Switch to Another Branch |====================
1.To switch to an existing branch:
> git checkout branch_name
* Or, using the newer syntax:
> git switch branch_name

====================| Delete a branch |====================
1.To delete a branch that you no longer need (make sure you’re not on the branch you want to delete), use:
> git branch -d branch-name

2.If the branch has unmerged changes and you still want to delete it, use:
> git branch -D branch-name

====================| Renaming the Current Branch |====================
1.If you're on the branch you want to rename, run the following command:
> git branch -m new-branch-name

2. Renaming a Branch that You’re Not Currently On:
> git branch -m old-branch-name new-branch-name

====================| Push the Renamed Branch (If Already Pushed to Remote) |====================
1.Push the renamed branch to the remote repository:
> git push origin new-branch-name

2.If the old branch was already pushed to the remote, you’ll need to delete it from the remote:
> git push origin --delete old-branch-name

3.To set the upstream for your new branch (so that git push works without specifying the branch name), run:
> git push --set-upstream origin new-branch-name

====================| If You Have Uncommitted Changes |====================
1.If you have uncommitted changes that you want to keep, you can stash them before switching:
> git stash

2.Then switch branches and apply the stash later with:
> git stash pop

====================| If the Branch Doesn’t Exist Locally |====================
1.If the branch exists remotely but not locally, fetch it first:
> git fetch origin
> git checkout branch_name  # or: git switch branch_name

====================| If You Want to Create and Switch to a New Branch |====================
1.Use this command:
> git checkout -b new_branch_name
* Or:
> git switch -c new_branch_name

====================| Ensure the Branch Exists |====================
1.Check existing branches
> git branch --list

2.If the branch isn’t listed, check remote branches with:
> git branch -r

3.If the branch exists remotely but not locally, you can fetch it using:
git fetch origin
git checkout branch_name  # or: git switch branch_name

====================| If You Have Uncommitted Changes |====================
1.If Git prevents you from switching due to uncommitted changes, either commit them:
> git add .
git commit -m "Saving progress before switching branches"

* Or stash them:
> git stash

2.Then switch branches and restore them with:
> git stash pop






====================| Title |====================



